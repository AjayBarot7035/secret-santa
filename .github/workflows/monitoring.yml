name: Monitoring and Alerts

on:
  schedule:
    - cron: '*/5 * * * *'  # Every 5 minutes
  workflow_dispatch:

env:
  AWS_REGION: us-east-1

jobs:
  cloudwatch-metrics:
    name: CloudWatch Metrics Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Check ECS Service Health
      run: |
        # Check CSV Parser Service
        CSV_PARSER_HEALTH=$(aws ecs describe-services \
          --cluster secret-santa-cluster \
          --services secret-santa-csv-parser \
          --query 'services[0].runningCount' \
          --output text)
        
        if [ "$CSV_PARSER_HEALTH" -eq 0 ]; then
          echo "‚ùå CSV Parser Service is not running"
          exit 1
        fi
        
        # Check Assignment Service
        ASSIGNMENT_HEALTH=$(aws ecs describe-services \
          --cluster secret-santa-cluster \
          --services secret-santa-assignment-service \
          --query 'services[0].runningCount' \
          --output text)
        
        if [ "$ASSIGNMENT_HEALTH" -eq 0 ]; then
          echo "‚ùå Assignment Service is not running"
          exit 1
        fi
        
        # Check API Gateway Service
        API_GATEWAY_HEALTH=$(aws ecs describe-services \
          --cluster secret-santa-cluster \
          --services secret-santa-api-gateway \
          --query 'services[0].runningCount' \
          --output text)
        
        if [ "$API_GATEWAY_HEALTH" -eq 0 ]; then
          echo "‚ùå API Gateway Service is not running"
          exit 1
        fi
        
        echo "‚úÖ All services are healthy"
        
    - name: Check ALB Health
      run: |
        # Get ALB DNS name
        ALB_DNS=$(aws elbv2 describe-load-balancers \
          --names secret-santa-alb \
          --query 'LoadBalancers[0].DNSName' \
          --output text)
        
        # Check API Gateway health endpoint
        HEALTH_RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://$ALB_DNS/api/v1/secret_santa/health)
        
        if [ "$HEALTH_RESPONSE" != "200" ]; then
          echo "‚ùå API Gateway health check failed with status: $HEALTH_RESPONSE"
          exit 1
        fi
        
        echo "‚úÖ ALB and API Gateway are healthy"
        
    - name: Check SQS Queue Depth
      run: |
        # Check CSV Parser queue
        CSV_QUEUE_DEPTH=$(aws sqs get-queue-attributes \
          --queue-url $(aws sqs get-queue-url --queue-name secret-santa-csv-parser --query 'QueueUrl' --output text) \
          --attribute-names ApproximateNumberOfMessages \
          --query 'Attributes.ApproximateNumberOfMessages' \
          --output text)
        
        if [ "$CSV_QUEUE_DEPTH" -gt 100 ]; then
          echo "‚ö†Ô∏è CSV Parser queue has $CSV_QUEUE_DEPTH messages (high backlog)"
        fi
        
        # Check Assignment Service queue
        ASSIGNMENT_QUEUE_DEPTH=$(aws sqs get-queue-attributes \
          --queue-url $(aws sqs get-queue-url --queue-name secret-santa-assignment-service --query 'QueueUrl' --output text) \
          --attribute-names ApproximateNumberOfMessages \
          --query 'Attributes.ApproximateNumberOfMessages' \
          --output text)
        
        if [ "$ASSIGNMENT_QUEUE_DEPTH" -gt 100 ]; then
          echo "‚ö†Ô∏è Assignment Service queue has $ASSIGNMENT_QUEUE_DEPTH messages (high backlog)"
        fi
        
        echo "‚úÖ Queue depths are normal"
        
    - name: Check CloudWatch Logs
      run: |
        # Check for error logs in the last 5 minutes
        ERROR_COUNT=$(aws logs filter-log-events \
          --log-group-name "/ecs/secret-santa-api-gateway" \
          --start-time $(($(date +%s) - 300))000 \
          --filter-pattern "ERROR" \
          --query 'events | length(@)' \
          --output text)
        
        if [ "$ERROR_COUNT" -gt 10 ]; then
          echo "‚ö†Ô∏è High error count in API Gateway logs: $ERROR_COUNT errors in last 5 minutes"
        fi
        
        echo "‚úÖ Log monitoring is normal"

  alert-on-failure:
    name: Alert on Failure
    runs-on: ubuntu-latest
    if: failure()
    
    steps:
    - name: Send Slack notification
      uses: 8398a7/action-slack@v3
      with:
        status: failure
        text: 'Secret Santa Microservices deployment failed! Check the logs for details.'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        
    - name: Create GitHub Issue
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'üö® Secret Santa Microservices Health Check Failed',
            body: `## Health Check Failure
            
            The automated health check for the Secret Santa microservices has failed.
            
            **Workflow:** ${context.workflow}
            **Run ID:** ${context.runId}
            **Commit:** ${context.sha}
            
            Please investigate the issue and ensure all services are running properly.
            
            ### Services to check:
            - CSV Parser Service
            - Assignment Service  
            - API Gateway
            - Application Load Balancer
            - SQS Queues
            - CloudWatch Logs
            
            [View Workflow Run](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})`
          })
