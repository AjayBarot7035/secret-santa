version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: secret_santa_prod
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for Sidekiq
  redis:
    image: redis:7-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # CSV Parser Service
  csv-parser:
    build: ./csv-parser-service
    environment:
      - AWS_REGION=${AWS_REGION}
      - SQS_QUEUE_CSV_PARSER=${SQS_QUEUE_CSV_PARSER}
      - SNS_TOPIC_EMPLOYEE_DATA_PARSED=${SNS_TOPIC_EMPLOYEE_DATA_PARSED}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  # Assignment Service
  assignment-service:
    build: ./assignment-service
    environment:
      - RAILS_ENV=production
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/secret_santa_prod
      - REDIS_URL=redis://redis:6379/0
      - AWS_REGION=${AWS_REGION}
      - SQS_QUEUE_ASSIGNMENT_SERVICE=${SQS_QUEUE_ASSIGNMENT_SERVICE}
      - SNS_TOPIC_ASSIGNMENTS_GENERATED=${SNS_TOPIC_ASSIGNMENTS_GENERATED}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - ENABLE_SQS_PROCESSOR=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # API Gateway
  api-gateway:
    build: ./api-gateway
    environment:
      - RAILS_ENV=production
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/secret_santa_prod
      - REDIS_URL=redis://redis:6379/0
      - AWS_REGION=${AWS_REGION}
      - SNS_TOPIC_EMPLOYEE_DATA_RAW=${SNS_TOPIC_EMPLOYEE_DATA_RAW}
      - SQS_QUEUE_ASSIGNMENTS_COMPLETED=${SQS_QUEUE_ASSIGNMENTS_COMPLETED}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - CSV_PARSER_SERVICE_URL=http://csv-parser:8080
      - ASSIGNMENT_SERVICE_URL=http://assignment-service:3001
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      csv-parser:
        condition: service_started
      assignment-service:
        condition: service_started
    restart: unless-stopped

volumes:
  postgres_data:
